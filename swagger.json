{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Tasks Board Documentation",
    "description": "Test endpoints"
  },
  "consumers": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://task-pro-covc.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "User Profile",
      "description": "User profile endpoints"
    },
    {
      "name": "Feedback",
      "description": "Send feedback endpoint"
    },
    {
      "name": "Boards, Columns and Tasks",
      "description": "Boards, Columns and Tasks endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Provided email exists",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "example": {
                  "token": "your_access_token_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Get current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "example": {
                  "name": "John Dohe",
                  "email": "john.dohe@example.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "User theme update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserThemeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "example": {
                  "theme": "your_updated_theme_goes_here"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/feedback/sendFeedback": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Send user feedback",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback sent successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Feedback sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/board/": {
      "post": {
        "tags": ["Boards, Columns and Tasks"],
        "summary": "Add a new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewBoardRequest"
              }
            }
          }
        },
        "responses": {}
      },
      "get": {
        "tags": ["Boards, Columns and Tasks"],
        "summary": "Get all user's boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Current user's bords",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/board/:{boardId}": {
      "get": {
        "tags": ["Boards, Columns and Tasks"],
        "summary": "Get board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {}
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserThemeUpdateRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "example": "violet"
          }
        }
      },
      "SendFeedBackRequest": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "message": {
            "type": "string",
            "example": "Your feedback text should be here."
          }
        }
      },
      "AddNewBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "To Do"
          }
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "background": {},
            "owner": {
              "type": "string"
            } 
          }
        },
        "example": [                  
          {
            "_id": "board_ID",
            "title": "Bord Title",
            "background": null,
            "owner": "owner_ID"
          },
          {
            "_id": "board_ID",
            "title": "Bord Title",
            "background": null,
            "owner": "owner_ID"
          } 
        ]                           
      }      
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
