{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.1",
    "title": "Tasks Board Documentation",
    "description": "Test endpoints"
  },
  "consumers": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://task-pro-covc.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "User Profile",
      "description": "User profile endpoints"
    },
    {
      "name": "Feedback",
      "description": "Send feedback endpoint"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Cards",
      "description": "Cards endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Provided email exists",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "example": {
                  "token": "your_access_token_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Get current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "example": {
                  "name": "John Dohe",
                  "email": "john.dohe@example.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "Upload user profile",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {                  
                  "name": {
                    "type": "string",
                    "example": "Brandon Storm"
                  },
                  "email": {
                    "type": "string",
                    "example": "brandon.storm@yahoo.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "User theme update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserThemeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "example": {
                  "theme": "your_updated_theme_goes_here"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/feedback/sendFeedback": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Send user feedback",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback sent successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Feedback sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/board": {
      "post": {
        "tags": ["Boards"],
        "summary": "Add a new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New board created",
            "content": {
              "application/json": {
                "example": {
                  "title": "To Do",
                  "background": "some_background_URL OR empty(null)",
                  "owner": "owner_ID",
                  "_id": "board_ID",
                  "columns": [],
                  "createdAt": "createdAt_Date_Time",
                  "updatedAt": "updatedAt_Date_Time"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Title conflict"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Boards"],
        "summary": "Get all user's boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Current user's bords",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/board/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardByIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Boards"],
        "summary": "Update board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Delete board by ID"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Deleted successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/board/filter/:boardId/:priority": {
      "patch": {
        "tags": ["Boards"],
        "summary": "Filter cards on the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          },
          {
            "in": "path",
            "name": "priority",
            "required": true,
            "type": "string",
            "description": "Card's Priority"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful response containing the filtered items",
            "content": {
              "application/json": {
                "example": {
                  "sortedItems": [
                    {
                      "cardId": "item1",
                      "priority": "high"
                    },
                    {
                      "cardId": "item2",
                      "priority": "medium"
                    },
                    {
                      "cardId": "item3",
                      "priority": "low"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/column/{boardId}": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add new column to the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New column created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "board_ID",
                  "title": "Board title",
                  "background": "background_url",
                  "owner": "owner_ID",
                  "columns": [
                    {
                      "title": "To Do",
                      "owner": "owner_ID",
                      "_id": "first_column_ID",
                      "cards": []
                    },
                    {
                      "title": "In Progress",
                      "owner": "owner_ID",
                      "_id": "second_column_ID",
                      "cards": []
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Internal server error" }
        }
      },
      "get": {
        "tags": ["Columns"],
        "summary": "Get board's columns",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      }
    },
    "/column": {
      "put": {
        "tags": ["Columns"],
        "summary": "Update coolumn",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete coolumn",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      }
    },
    "/card/{boardId}": {
      "post": {
        "tags": ["Cards"],
        "summary": "Add card",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      },
      "put": {
        "tags": ["Cards"],
        "summary": "Update card",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      },
      "patch": {
        "tags": ["Cards"],
        "summary": "Replace card",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete card",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserProfileUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64eb2874661d9d1f6d6d6135"
          },
          "name": {
            "type": "string",
            "example": "New user name"
          },
          "email": {
            "type": "string",
            "example": "New user email"
          },
          "password": {
            "type": "string",
            "example": "New user password"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg"
          },
          "token": {
            "type": "string",
            "example": "dt1fhbf1gdbb2.ordfddt21bfdb...."
          },
          "createdAt": {
            "type": "string",
            "example": "2023-08-27T10:41:56.612Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-08-28T08:28:04.002Z"
          }
        },
        "example": {
          "_id": "64eb2874661d9d1f6d6d6135",
          "name": "Brandon Storm",
          "email": "joh.dohe@example.com",
          "password": "$2b$10$yw6Bpd8dzIIQCQiVUBzVUuKEcs/Wmb/PpUU0qKAMKog21kLZwt2NS",
          "avatar": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg",
          "theme": "light",
          "token": "your_access_token_here",
          "createdAt": "2023-08-27T10:41:56.612Z",
          "updatedAt": "2023-08-28T08:28:04.002Z"
        }
      },
      "UserThemeUpdateRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "example": "violet"
          }
        }
      },
      "SendFeedBackRequest": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "message": {
            "type": "string",
            "example": "Your feedback text should be here."
          }
        }
      },
      "AddNewBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "To Do"
          },
          "background": {
            "type": "string"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "background": {
            "type": "string"
          }
        }
      },
      "UpdateBoardResponse": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "64e9cd645c1d0943eee0c000"
          },
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "background": {
            "type": "string"
          },
          "owner": {
            "type": "string",
            "example": "64eb2874661d9d1f6d6d6135"
          }
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "64e9cd645c1d0943eee0c000"
            },
            "title": {
              "type": "string",
              "example": "Some Board title"
            },
            "background": {
              "type": "string",
              "example": "http://example.com/picture.jpg"
            },
            "owner": {
              "type": "string",
              "example": "64e88f6cc245676d9cbf802b"
            }
          }
        },
        "example": [
          {
            "_id": "board_1_ID",
            "title": "Title for board 1",
            "background": null,
            "owner": "owner_ID",
            "columns": []
          },
          {
            "_id": "board_2_ID",
            "title": "Title for board 2",
            "background": null,
            "owner": "owner_ID",
            "columns": []
          }
        ]
      },
      "GetBoardByIDResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64e9cd645c1d0943eee0c000"
          },
          "title": {
            "type": "string",
            "example": "Some Board title"
          },
          "background": {
            "type": "string",
            "example": "http://example.com/picture.jpg"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64e9cd645c1d0943eee0c000"
                },
                "title": {
                  "type": "string",
                  "example": "Some Column title"
                }
              }
            }
          },
          "owner": {
            "type": "string",
            "example": "64e88f6cc245676d9cbf802b"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-08-26T10:01:08.310+00:00"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-08-26T10:34:53.150+00:00"
          }
        }
      },
      "AddNewColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New column name"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
