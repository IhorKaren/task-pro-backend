{
  "openapi": "3.0.1",
  "info": {
    "version": "3.0.0",
    "title": "Tasks Board Documentation",
    "description": "Test endpoints",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumers": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://task-pro-backend.vercel.app" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "User Profile",
      "description": "User profile endpoints"
    },
    {
      "name": "Feedback",
      "description": "Send feedback endpoint"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Cards",
      "description": "Cards endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "409": {
            "description": "Provided email exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "Logout successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Get current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "Upload user profile",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Brandon Storm"
                  },
                  "email": {
                    "type": "string",
                    "example": "brandon.storm@yahoo.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "User theme update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserThemeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "text/plain": {
                "example": "'theme_name'"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/sendFeedback": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Send user feedback",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback sent successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Feedback sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/board": {
      "post": {
        "tags": ["Boards"],
        "summary": "Add a new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New board created",
            "content": {
              "application/json": {
                "example": {
                  "title": "Board title",
                  "icon": "file_path",
                  "background": {
                    "min": "file_path",
                    "desktop": "file_path",
                    "tablet": "file_path",
                    "mobile": "file_path"
                  },
                  "filter": "default",
                  "owner": "owner_ID",
                  "_id": "board_ID",
                  "columns": [],
                  "createdAt": "createdAt_Date_Time",
                  "updatedAt": "updatedAt_Date_Time"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "409": {
            "description": "Title conflict",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Boards"],
        "summary": "Get all user's boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Current user's bords",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/board/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardByIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Boards"],
        "summary": "Update board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Delete board by ID"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Deleted successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Board was not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/board/filter/:boardId/:priority": {
      "patch": {
        "tags": ["Boards"],
        "summary": "Filter cards on the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          },
          {
            "in": "path",
            "name": "priority",
            "required": true,
            "type": "string",
            "description": "Card's Priority"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful response containing the filtered items",
            "content": {
              "application/json": {
                "example": {
                  "sortedItems": [
                    {
                      "cardId": "item1",
                      "priority": "high"
                    },
                    {
                      "cardId": "item2",
                      "priority": "medium"
                    },
                    {
                      "cardId": "item3",
                      "priority": "low"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input parameters",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/column/{boardId}": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add new column to the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New column created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Columns"],
        "summary": "Get board's columns",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Current board's ID"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetColumnsByBoardIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/column": {
      "put": {
        "tags": ["Columns"],
        "summary": "Update column",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Column was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete coolumn",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/card/{boardId}": {
      "post": {
        "tags": ["Cards"],
        "summary": "Add new card",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["Cards"],
        "summary": "Update card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Cards"],
        "summary": "Replace card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardReplaceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardReplaceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserRegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg"
          },
          "theme": {
            "type": "string",
            "example": "light"
          },
          "token": {
            "type": "string",
            "example": "your_access_token_goes_here"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "token": {
            "type": "string",
            "example": "your_access_token_goes_here"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg"
          },
          "theme": {
            "type": "string",
            "example": "light"
          }
        }
      },
      "UserCurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.dohe@example.com"
          },
          "token": {
            "type": "string",
            "example": "your_access_token_goes_here"
          },
          "name": {
            "type": "string",
            "example": "John Dohe"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg"
          },
          "theme": {
            "type": "string",
            "example": "light"
          }
        }
      },
      "UserProfileUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64eb2874661d9d1f6d6d6135"
          },
          "name": {
            "type": "string",
            "example": "New user name"
          },
          "email": {
            "type": "string",
            "example": "New user email"
          },
          "password": {
            "type": "string",
            "example": "New user password"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg"
          },
          "token": {
            "type": "string",
            "example": "your_token_goes_here"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-08-27T10:41:56.612Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-08-28T08:28:04.002Z"
          }
        },
        "example": {
          "_id": "64eb2874661d9d1f6d6d6135",
          "name": "Brandon Storm",
          "email": "joh.dohe@example.com",
          "password": "hashed_password",
          "avatar": "https://res.cloudinary.com/dbxyhtguo/image/upload/v1693209200/zaglmhxxgeb6ykil9rzz.jpg",
          "theme": "current_user_theme",
          "token": "your_access_token_here",
          "createdAt": "2023-08-27T10:41:56.612Z",
          "updatedAt": "2023-08-28T08:28:04.002Z"
        }
      },
      "UserThemeUpdateRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "example": "violet"
          }
        }
      },
      "SendFeedBackRequest": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "example": "john.dohe@example.com"
          },
          "message": {
            "type": "string",
            "example": "Your feedback text should be here."
          }
        }
      },
      "AddNewBoardRequest": {
        "type": "object",
        "required": ["title", "icon", "background"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New_board_title"
          },
          "background": {
            "type": "object",
            "required": ["min", "desktop", "tablet", "mobile"],
            "properties": {
              "min": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "desktop": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "tablet": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "mobile": {
                "type": "string",
                "example": "here_goes_file_name"
              }
            }
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "required": ["title", "icon"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "icon": {
            "type": "string",
            "example": "icon.jpg"
          }
        }
      },
      "UpdateBoardResponse": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "background": {
            "type": "object",
            "properties": {
              "min": {
                "type": "string",
                "example": "some_file_name"
              },
              "desktop": {
                "type": "string",
                "example": "some_file_name"
              },
              "tablet": {
                "type": "string",
                "example": "some_file_name"
              },
              "mobile": {
                "type": "string",
                "example": "some_file_name"
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "64e9cd645c1d0943eee0c000"
          },
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "icon": {
            "type": "string",
            "example": "path/icon.jpg"
          },
          "filter": {
            "type": "string",
            "example": "default"
          },
          "owner": {
            "type": "string",
            "example": "owner_ID"
          }
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Some Board title"
            },
            "_id": {
              "type": "string",
              "example": "here_goes_board_id"
            },
            "icon": {
              "type": "string",
              "example": "..path/picture.jpg"
            },
            "owner": {
              "type": "string",
              "example": "here_goes_owner_id"
            }
          }
        },
        "example": [
          {
            "title": "Board title",
            "_id": "board_id",
            "icon": "...path/file.jpg",
            "owner": "owner_id"
          }
        ]
      },
      "GetBoardByIDResponse": {
        "type": "object",
        "properties": {
          "background": {
            "type": "object",
            "properties": {
              "min": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "desktop": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "tablet": {
                "type": "string",
                "example": "here_goes_file_name"
              },
              "mobile": {
                "type": "string",
                "example": "here_goes_file_name"
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "here_goes_board_id"
          },
          "title": {
            "type": "string",
            "example": "Some Board title"
          },
          "icon": {
            "type": "string",
            "example": "file.jppg"
          },
          "filter": {
            "type": "string",
            "example": "default"
          },
          "owner": {
            "type": "string",
            "example": "64e88f6cc245676d9cbf802b"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64e9cd645c1d0943eee0c000"
                },
                "title": {
                  "type": "string",
                  "example": "Some Column title"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2023-08-26T10:01:08.310+00:00"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-08-26T10:34:53.150+00:00"
          }
        }
      },
      "AddNewColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New column name"
          }
        }
      },
      "AddNewColumnResponse": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "background": {
            "type": "object",
            "properties": {
              "min": {
                "type": "string",
                "example": "path_with_file_name"
              },
              "desktop": {
                "type": "string",
                "example": "path_with_file_name"
              },
              "tablet": {
                "type": "string",
                "example": "path_with_file_name"
              },
              "mobile": {
                "type": "string",
                "example": "path_with_file_name"
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "board_id"
          },
          "title": {
            "type": "string",
            "example": "Board title"
          },
          "icon": {
            "type": "string",
            "example": "path/icon.jpg"
          },
          "filter": {
            "type": "string",
            "example": "default"
          },
          "owner": {
            "type": "string",
            "example": "owner_ID"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Some Column title"
                },
                "owner": {
                  "type": "string",
                  "example": "board_id"
                },
                "_id": {
                  "type": "string",
                  "example": "column_id"
                },
                "cards": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "GetColumnsByBoardIDResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Some Column title"
            },
            "_id": {
              "type": "string",
              "example": "64e9cd645c1d0943eee0c000"
            },
            "owner": {
              "type": "string",
              "example": "64e88f6cc245676d9cbf802b"
            }
          }
        },
        "example": [
          {
            "title": "Column title 1",
            "_id": "first_column_id",
            "owner": "borad_id"
          },
          {
            "title": "Column title 2",
            "_id": "second_column_id",
            "owner": "borad_id"
          }
        ]
      },
      "UpdateColumnRequest": {
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New column name"
          },
          "owner": {
            "type": "string",
            "example": "board_id"
          },
          "_id": {
            "type": "string",
            "example": "column_id"
          }
        }
      },
      "UpdateColumnResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated column name"
          },
          "owner": {
            "type": "string",
            "example": "board_id"
          },
          "_Id": {
            "type": "string",
            "example": "column_id"
          }
        },
        "example": {
          "title": "In Progress",
          "owner": "Board's_ID",
          "_id": "Column's_ID",
          "cards": []
        }
      },
      "DeleteColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "owner": {
            "type": "string",
            "example": "Current board's owner_ID"
          },
          "_id": {
            "type": "string",
            "example": "Current column_Id"
          }
        }
      },
      "AddNewCardRequest": {
        "type": "object",
        "required": ["title", "text", "deadline", "owner", "priority"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "Description to the card"
          },
          "deadline": {
            "type": "string",
            "example": "date_from_pickup_calendar"
          },
          "owner": {
            "type": "string",
            "example": "owner_ID"
          },
          "priority": {
            "type": "string",
            "example": "medium"
          }
        }
      },
      "AddNewCardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "Description to the card"
          },
          "deadline": {
            "type": "string",
            "example": "date_from_pickup_calendar"
          },
          "owner": {
            "type": "string",
            "example": "owner_ID"
          },
          "priority": {
            "type": "string",
            "example": "medium"
          }
        },
        "example": {
          "title": "Swagger Doc",
          "text": "Describe all endpoints.",
          "priority": "high",
          "deadline": "Deadline_date",
          "owner": "Column's_ID",
          "_id": "Card_ID"
        }
      },
      "CardUpdateRequest": {
        "type": "object",
        "required": ["_id", "owner"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "Card_ID"
          },
          "owner": {
            "type": "string",
            "example": "Column_ID"
          },
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "new card description"
          },
          "priority": {
            "type": "string",
            "example": "new_priority"
          },
          "deadline": {
            "type": "string",
            "example": "new_dedline"
          }
        }
      },
      "CardUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Card_ID"
          },
          "owner": {
            "type": "string",
            "example": "Column_ID"
          },
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "new card description"
          },
          "priority": {
            "type": "string",
            "example": "new_priority"
          },
          "deadline": {
            "type": "string",
            "example": "new_dedline"
          }
        },
        "example": {
          "title": "Updated card's name",
          "text": "Updated description",
          "priority": "Updated priority",
          "deadline": "08/30/2023",
          "owner": "Column's_ID",
          "_id": "Card's_ID"
        }
      },
      "CardReplaceRequest": {
        "type": "object",
        "required": ["_id", "owner", "newOwner"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "Card_ID"
          },
          "owner": {
            "type": "string",
            "example": "Current_column_ID"
          },
          "newOwner": {
            "type": "string",
            "example": "New_column_ID"
          }
        }
      },
      "CardReplaceResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Card title"
          },
          "text": {
            "type": "string",
            "example": "Description to the card"
          },
          "priority": {
            "type": "string",
            "example": "Card priority"
          },
          "deadline": {
            "type": "string",
            "example": "Card_deadline"
          },
          "owner": {
            "type": "string",
            "example": "new_column_owner_ID"
          },
          "_id": {
            "type": "string",
            "example": "card_ID"
          }
        },
        "example": {
          "title": "Steps to do",
          "text": "Description goes here",
          "priority": "high",
          "deadline": "08/29/2023",
          "owner": "64ec9ff79ea4d56b64413b21",
          "_id": "64eca0769ea4d56b64413b2c"
        }
      },
      "DeleteCardRequest": {
        "type": "object",
        "required": ["_id", "owner"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "Card_ID"
          },
          "owner": {
            "type": "string",
            "example": "Column_ID"
          }
        }
      },
      "DeleteCardResponse": {
        "typ": "object",
        "example": {
          "message": "Card deleted successfully"
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "some_text_from_backend_server"
          }
        },
        "example": {
          "message": "Unauthorized"
        }
      },
      "OtherResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "some_text_from_backend_server"
          }
        },
        "example": {
          "message": "some_message_goes_here"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
